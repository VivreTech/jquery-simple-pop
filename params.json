{
  "name": "JquerySimplePop",
  "tagline": "jQuery plugin for Inline Popups ",
  "body": "# Simple modal/popup for inline elements based on CSS\r\n\r\n\r\n## How to use this plugin\r\n\r\n### 1. Create markup (Inline)\r\n\r\n```\r\n div.modal__wrapper.is-hidden (Add any custom class for themes e.g. .modal__wrapper--default-theme)\r\n \tdiv.modal__double.js-modal__double\r\n```\r\n\r\n### 2. Inside of the two div you can do your magic.\r\n```\r\n\tdiv.modal__content\r\n```\r\n\r\n### 3. Place the close button if needed\r\n\r\n```\r\na.modal__close.js-modal__close\r\n```\r\n\r\n\r\n### 4. Add custom class for the main wrapper to attach the plugin too\r\n\r\n```\r\n.js-example-modal\r\n```\r\n\r\n### 5. Call the plugin when needed\r\n\r\n```\r\n$('.js-example-modal').simplePop();\r\n```\r\n\r\n## How to customize\r\nIn the SCSS file you can find examples for custom show/hide animations\r\n\r\n## Api\r\n\r\n### 1. Class names\r\nYou can customise the following classes when instantiating the plugin\r\n * \t`classHidden: 'is-hidden'`\r\n * \t`classVisible: 'is-visible'`\r\n * \t`classInvisible: 'is-invisible'`\r\n * \t`classTall: 'is-tall'`\r\n * \t`classBellow: 'is-bellow'`\r\n * \t`classCloseButton: 'js-modal__close'`\r\n * \t`classBackground: 'js-modal__double'`\r\n \r\n \r\n### 2. Callbacks\r\n\r\nYou have callbacks onClose, onIntentClose, onMistakeClose\r\n * \t`onClose`: when the modal is closed\r\n * \t`onIntentClose`: when the user clicks on the close button\r\n * \t`onMistakeClose`: when the user closes the modal by clicking on the background\r\n \r\n### 3. Example with defaults\r\n```\r\n $('.js-example-modal').simplePop({\r\n\t classHidden: 'is-hidden',\r\n\t classVisible: 'is-visible',\r\n\t classInvisible: 'is-invisible',\r\n\t classTall: 'is-tall',\r\n\t classBellow: 'is-bellow',\r\n\t classCloseButton: 'js-modal__close',\r\n\t classBackground: 'js-modal__double',\r\n\t closeOthers: true,\r\n\t closeOthersDelay: 200, //Miliseconds\r\n\t onOpen: function(element){\r\n\t\tconsole.log('I am open');\r\n\t\t//'element' is the parent of the modal\r\n\t }\r\n\t onClose: function(element){\r\n\t\tconsole.log('I am closed');\r\n\t },\r\n\t onIntentClose: function(element){\r\n\t\tconsole.log('I am closed from the X')\r\n\t },\r\n\t onMistakeClose: function(){\r\n\t\tconsole.log('I am closed from the background')\r\n\t }\r\n })\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}